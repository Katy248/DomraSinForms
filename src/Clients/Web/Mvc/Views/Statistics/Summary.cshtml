@using DomraSinForms.Application.Answers.Queries.GetList;
@using DomraSinForms.ChartsWrapper.ApexCharts.Charts;
@using DomraSinForms.ChartsWrapper.ApexCharts;
@using DomraSinForms.Domain.Models.Questions;
@using Forms.Mvc.Helpers;
@using Forms.Mvc.ViewModels.Statistics;
@using Microsoft.AspNetCore.Html;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@using DomraSinForms.ChartsWrapper.ApexCharts.Charts.BarChart;
@using DomraSinForms.ChartsWrapper.ApexCharts.Charts.PieChart;
@using DomraSinForms.ChartsWrapper.ApexCharts.Charts.LineChart;
@using DomraSinForms.ChartsWrapper.ApexCharts.Extensions;
@inject IViewLocalizer Localizer
@model SummaryViewModel
@{
ViewData["Title"] = Localizer["Form answers"]?.Value;
var formChartOptions = new ChartOptionsBuilder()
.UsePalette(1)
.CreateLineChart(ChartHelper.AnswersActions(Model.AnswersDto), LineChartDataType.Area)
.UseLineStyle(LineStroke.Smooth)
.Build().Serialize();
}
<div class="h1 text-center">
  @Localizer["Form answers"]
</div>
<div class="row g-3 justify-content-center">
  <div class="col-sm-1 col-md-3 col-xl-3"></div>
  <div class="col-sm-12 col-md-6 col-xl-6 row g-3 gx-4 justify-content-center">
    <div class="col-12 my-5">
      <div class="card">
        <div class="card-body">
          <div class="display-6 text-center my-3">@Localizer["Answers statistics"]:</div>
          <div id="chart-formChart"></div>
        </div>
      </div>
    </div>
    @foreach (var question in Model.Questions.OrderBy(q => q.Question.Index))
    {
    <div class="col-12">
      @await Html.PartialAsync("_AnsweredQuestionPartial", question)
    </div>
    }
  </div>
  <div class="col-sm-12 col-md-3 col-xl-3 col-12 mt-sm-0 mt-5">
    @await Html.PartialAsync("_FormNavigationPartial", Model.FormId)
  </div>
</div>
@section scripts {
<script src="~/lib/apexcharts.js"></script>
<script>
  function WriteChart(elementId, chartOptions) {
    console.log('chart');
    let chart = new ApexCharts(document.querySelector(`#${elementId}`), chartOptions);
    console.log()
    chart.render();
  }

  WriteChart('chart-formChart', JSON.parse('@formChartOptions'))
</script>
@foreach (var question in Model.Questions)
{
if (question.Question is OptionsQuestion oq)
{
var optionsBuilder = ChartHelper.GetChartOptionsBuilder();
if (oq.AllowMultipleChoice)
optionsBuilder.CreateBarChart(ChartHelper.GetCountData(question)).UseHorizontal();
else
optionsBuilder.CreatePieChart(ChartHelper.GetPercentageData(question));
var chartOptions = optionsBuilder.Build().Serialize();
<script type="text/javascript">
  console.debug("Start chart '@(question.Question.Id)'");
  var options = @(chartOptions)
  console.log(options);
  //options.theme.mode = themeSwitch.isDarkTheme() ? 'dark' : 'light';
  console.log(options.series);
  console.log(options.xaxis);
  WriteChart('chart-@(question.Question.Id)', options);
</script>
}
}
<script>
  const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
  const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
  @*const popoverTriggerList = document.querySelectorAll('[data-bs-toggle="popover"]')
  const popoverList = [...popoverTriggerList].map(popoverTriggerEl => new bootstrap.Popover(popoverTriggerEl)) *@
</script>
}
<style>
  .apexcharts-canvas {
    background-color: transparent;
  }
</style>
